package Drill;

import java.util.Scanner;

public class ALGO_156 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

		Scanner sr = new Scanner(System.in);
		String s = sr.next() + ')';
		int A[] = new int[s.length()];
		char B[] = new char[s.length()];
		int al, bl;
		char map[][] = { { '<', '<', '<', '<', '<', '>' }, 
				{ '<', '<', '<', '<', '<', '>' },
				{ '>', '>', '<', '<', '<', '>' }, { '>', '>', '<', '<', '<', '>' }, { '<', '<', '<', '<', '<', '=' },
				{ '<', '<', '<', '<', '=', '<' } };

		bl = 0;
		al = -1;
		B[0] = '(';
		int zt = 0;
		for (int i = 0; i < s.length(); i++) {
			char t = s.charAt(i);
			if (t >= '0' && t <= '9') {
				if (zt == 0) {
					A[++al] = t - '0';
					zt = 1;
				} else {
					A[al] = al * 10 + t - '0';
				}
			} else {
				zt = 0;
				if (map[CtInt(B[bl])][CtInt(t)] == '<')
					B[++bl] = t;
				else {
					while (map[CtInt(B[bl])][CtInt(t)] == '>') {
						int p = A[al--];
						int q = A[al--];
						A[++al] = ys(q, B[bl], p);
						bl--;
					}
					if (map[CtInt(B[bl])][CtInt(t)] == '=') {
						bl--;
					} else
						B[++bl] = t;
				}

			}
		}
		System.out.println(A[0]);
	}

	static int CtInt(char c) {
		switch (c) {
		case '+':
			return 0;
		case '-':
			return 1;
		case '*':
			return 2;
		case '/':
			return 3;
		case '(':
			return 4;
		case ')':
			return 5;

		}
		return -1;
	}

	static int ys(int x, char c, int y) {
		switch (c) {
		case '+':
			return x + y;
		case '-':
			return x - y;
		case '*':
			return x * y;
		case '/':
			return x / y;
		}
		return -1;
	}

}
